// variables with defaults: MUTATION_1,MUTATIONS,EPISTATIC_S,NEUTRAL_FREQ,SUBPOPULATION
// requires: MUTATION_1,MUTATIONS,EPISTATIC_S,NEUTRAL_FREQ,SUBPOPULATION
// Epistatic AND frequency dependent reproductive success rate function
mutationEffect($MUTATION_1$) {
	if (hasMuts(individual, $MUTATIONS$)){
		return $EPISTATIC_S$;
	} else {
		if (homozygous) {
			return 1 + $NEUTRAL_FREQ$ - sim.mutationFrequencies($SUBPOPULATION$, mut);
		} else {
			return 1 + ($NEUTRAL_FREQ$ - sim.mutationFrequencies($SUBPOPULATION$, mut) * mut.mutationType.dominanceCoeff);
		}
	}
}

// function shared with modifyChild_multiway_epistatic.slim
function(logical)hasMuts(object<Individual> indv,
                         object<MutationType> muts){
	return(all(sapply(muts, "any(indv.genomes.countOfMutationsOfType(applyValue) > 0);")));
}
